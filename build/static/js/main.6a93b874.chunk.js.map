{"version":3,"sources":["images/me.jpg","Image.js","Button.js","Input.js","TextArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","style","width","height","backgroundImage","img","backgroundPosition","backgroundSize","backgroundRepeat","Button","props","useState","hover","setHover","backgroundColor","canHover","color","border","fontSize","padding","margin","textAlign","cursor","fontFamily","onMouseEnter","onMouseLeave","onClick","title","Input","required","borderRadius","placeholder","outline","TextArea","resize","children","App","page","setPage","landscape","setLandscape","useEffect","window","addEventListener","resized","innerWidth","innerHeight","leftStyles","display","justifyContent","alignItems","about","open","inquires","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a93b874.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.fd725012.jpg\";","import React from \"react\";\nimport img from \"./images/me.jpg\";\n\nexport const Image = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: `url(${img})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      }}\n    />\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./Button.css\";\n\nexport const Button = props => {\n  const [hover, setHover] = useState(false);\n  const padding = \"0.75vw 1vw 0.75vw 1vw\";\n  const border = \"0.2vw solid white\";\n  const fontSize = \"calc(9px + 0.3vw)\";\n  const backgroundColor = hover && props.canHover !== false ? \"white\" : \"black\";\n  const color = hover && props.canHover !== false ? \"black\" : \"white\";\n  const fontFamily = \"Montserrat\";\n  return (\n    <div\n      style={{\n        width: \"calc(50px + 5vw)\",\n        border,\n        fontSize,\n        padding,\n        margin: \"1vw 0px 1vw 0px\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        backgroundColor,\n        color,\n        fontFamily,\n        ...props.style\n      }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={props.onClick}\n    >\n      {props.title}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Input = props => {\n  const width = props.width || \"80%\";\n  const height = props.height || \"calc(12px + 3vh)\";\n  const borderRadius = 3;\n  const border = 0;\n  const padding = \"0px 1vw 0px 1vw\";\n  const outline = \"none\";\n  return (\n    <div>\n      {props.title && (\n        <div\n          style={{\n            padding: \"0.5vw 0px 0.5vw 0px\",\n            fontSize: \"calc(12px + 0.5vw)\"\n          }}\n        >\n          {props.title} {props.required && <>*</>}\n          <br />\n        </div>\n      )}\n      <div style={{ backgroundColor: \"white\", padding, borderRadius }}>\n        <input\n          placeholder={props.placeholder}\n          style={{\n            backgroundColor: \"transparent\",\n            width,\n            height,\n            border,\n            padding: 0,\n            outline,\n            ...props.style\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const TextArea = props => {\n  const borderRadius = 3;\n  const border = 0;\n  const outline = \"none\";\n  const width = \"100%\";\n  const height = \"13vh\";\n  return (\n    <div style={{ width: \"100%\" }}>\n      {props.title && (\n        <div\n          style={{\n            padding: \"0.5vw 0px 0.5vw 0px\",\n            fontSize: \"calc(12px + 0.5vw)\"\n          }}\n        >\n          {props.title} {props.required && <>*</>}\n          <br />\n        </div>\n      )}\n      <div style={{ backgroundColor: \"white\", padding: 10, borderRadius }}>\n        <textarea\n          style={{\n            backgroundColor: \"transparent\",\n            border,\n            padding: 0,\n            outline,\n            width,\n            height,\n            resize: \"none\",\n            ...props.style\n          }}\n        >\n          {props.children}\n        </textarea>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Image } from \"./Image\";\nimport { Button } from \"./Button\";\nimport { Input } from \"./Input\";\nimport { TextArea } from \"./TextArea\";\n\nfunction App() {\n  const [page, setPage] = useState(\"About\");\n  const [landscape, setLandscape] = useState(true);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", resized);\n    resized();\n  }, []);\n\n  const resized = () => {\n    if (window.innerWidth < window.innerHeight) {\n      setLandscape(false);\n    } else {\n      setLandscape(true);\n    }\n  };\n\n  const leftStyles = {\n    backgroundColor: \"black\",\n    color: \"white\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n\n  const about = (\n    <div style={leftStyles}>\n      <div\n        style={{\n          textAlign: \"center\",\n          padding: \"7vw\",\n          width: \"100%\"\n        }}\n      >\n        <h3 style={{ fontSize: \"calc(12px + 0.5vw)\" }}>NATHAN MACFARLANE</h3>\n        <h1 style={{ fontSize: \"calc(12px + 4vw)\" }}>\n          Photographer // Developer\n        </h1>\n        <p style={{ fontFamily: \"Montserrat\", fontSize: \"calc(12px + 0.5vw)\" }}>\n          SLO Native, Outdoor enthusiast, Ironman finisher, Caramel latte lover,\n          Cal Poly SLO Alumni, Product engineer at Ridgeline Apps\n        </p>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            title=\"INQUIRES\"\n            onClick={() => setPage(\"Inquires\")}\n            style={{ margin: 5 }}\n          />\n          <Button\n            title=\"INSTAGRAM\"\n            onClick={() =>\n              window.open(\"https://www.instagram.com/natey_mac\", \"_blank\")\n            }\n            style={{ margin: 5 }}\n          />\n          <Button title=\"LR PRESETS\" style={{ margin: 5 }} />\n        </div>\n      </div>\n    </div>\n  );\n\n  const inquires = (\n    <div style={leftStyles}>\n      <div style={{ width: \"70%\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          }}\n        >\n          <h2 style={{ fontSize: \"calc(12px + 1vw)\" }}>CONTACT</h2>\n        </div>\n        <Input title=\"Name\" required={true} />\n        <Input title=\"Email\" required={true} />\n        <TextArea title=\"Message\" required={true} />\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button title=\"SUBMIT\" />\n          <Button title=\"CANCEL\" onClick={() => setPage(\"About\")} />\n        </div>\n      </div>\n    </div>\n  );\n\n  return landscape ? (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100vh\"\n      }}\n    >\n      <div style={{ width: \"50%\", height: \"100%\" }}>\n        {page === \"About\" ? about : inquires}\n      </div>\n      <div style={{ width: \"50%\" }}>\n        <Image />\n      </div>\n    </div>\n  ) : (\n    <div style={{ height: \"100vh\" }}>\n      <div style={{ height: \"50%\" }}>{page === \"About\" ? about : inquires}</div>\n      <div style={{ height: \"50%\" }}>\n        <Image />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}